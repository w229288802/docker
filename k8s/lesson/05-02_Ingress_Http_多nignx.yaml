# Ingress Controller 控制器
# 需要提前安装MetalLB
# wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.3.1/deploy/static/provider/cloud/deploy.yaml
# kubectl exec -it nginx-646d5c7b67-mpw9r -n ingress-nginx  -- /bin/sh -c 'mkdir /usr/share/nginx/html/svc1 && echo "ingress web1" > /usr/share/nginx/html/svc1/index.html'
# kubectl exec -it nginx-646d5c7b67-mpw9r -n ingress-nginx  -- /bin/sh -c 'mkdir /usr/share/nginx/html/svc2 && echo "ingress web2" > /usr/share/nginx/html/svc2/index.html'

# 需要睡眠一秒，不然Ingres-controller可能会缓存，出现304

#kubectl get pods -o jsonpath='{.items[*].metadata.name}' -l app=ing-nginx1 -n ingress-nginx | tr ' ' '\n' | \
#  xargs -I {} kubectl exec {} -n ingress-nginx  -- /bin/sh -c \
#  'dir=`echo {} | cut -d'-' -f1,2`;mkdir -p /usr/share/nginx/html/$dir;echo "<h1>{}<h1>" > /usr/share/nginx/html/$dir/index.html;sleep 1'

#kubectl get pods -o jsonpath='{.items[*].metadata.name}' -l app=ing-nginx2 -n ingress-nginx | tr ' ' '\n' | \
#  xargs -I {} kubectl exec {} -n ingress-nginx  -- /bin/sh -c \
#  'dir=`echo {} | cut -d'-' -f1,2`;mkdir -p /usr/share/nginx/html/$dir;echo "<h1>{}<h1>" > /usr/share/nginx/html/$dir/index.html;sleep 1'


#！！！！！！！！！！！！注意要配置域名才能访问，不然404, /etc/hosts 192.168.137.90 www.kubemsb.com

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ing-nginx1
  namespace: ingress-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ing-nginx1
  template:
    metadata:
      labels:
        app: ing-nginx1
    spec:
      containers:
        - name: c1
          image: nginx:1.15-alpine
          imagePullPolicy: IfNotPresent

---

apiVersion: v1
kind: Service
metadata:
  name: ing-nginx1
  namespace: ingress-nginx
  labels:
    app: ing-nginx1
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: ing-nginx1

--- # Service

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ing-nginx2
  namespace: ingress-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ing-nginx2
  template:
    metadata:
      labels:
        app: ing-nginx2
    spec:
      containers:
        - name: c1
          image: nginx:1.15-alpine
          imagePullPolicy: IfNotPresent

---

apiVersion: v1
kind: Service
metadata:
  name: ing-nginx2
  namespace: ingress-nginx
  labels:
    app: ing-nginx2
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: ing-nginx2

--- #Ingress

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ing-nginx-multi                    #自定义ingress名称
  namespace: ingress-nginx
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: www.kubemsb2.com
      http:
        paths:
          - path: /ing-nginx1
            backend:
              service:
                name: ing-nginx1
                port:
                  number: 80
            pathType: Prefix
          - path: /ing-nginx2
            backend:
              service:
                name: ing-nginx2
                port:
                  number: 80
            pathType: Prefix

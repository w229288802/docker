# 可以提前拉image
# docker pull registry.k8s.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2

# wget https://raw.githubusercontent.com/kubernetes-sigs/nfs-subdir-external-provisioner/refs/heads/master/deploy/class.yaml ; kubectl apply -f class.yaml ; rm -f class.yaml
# wget https://raw.githubusercontent.com/kubernetes-sigs/nfs-subdir-external-provisioner/refs/heads/master/deploy/rbac.yaml ; kubectl apply -f rbac.yaml ; rm -f rbac.yaml
# wget https://raw.githubusercontent.com/kubernetes-sigs/nfs-subdir-external-provisioner/refs/heads/master/deploy/deployment.yaml ; \
#  sed -i 's/10.3.243.101/192.168.137.106/g' deployment.yaml; sed -i 's/\/ifs\/kubernetes/\/data\/nfs/g' deployment.yaml; \
#  kubectl apply -f deployment.yaml ; rm -f deployment.yaml

apiVersion: v1
kind: Service
metadata:
  name: vol-sc
spec:
  type: NodePort
  selector:
    app: vol-sc
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30006
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vol-sc
spec:
  serviceName: vol-sc
  replicas: 2
  selector:
    matchLabels:
      app: vol-sc
  template:
    metadata:
      labels:
        app: vol-sc
    spec:
      containers:
        - name: vol-sc
          image: nginx
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: vol-sc
              subPath: vol-sc-html
  volumeClaimTemplates:
    - metadata:
        name: vol-sc
      spec:
        accessModes: [ "ReadOnlyMany" ]
        storageClassName: "nfs-client"
        resources:
          requests:
            storage: 1Gi